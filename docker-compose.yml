# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

services:
  kafka-0:
    image: docker.io/bitnami/kafka:3.9
    ports:
      - "9097:9097"
      - "9095:9095"
    networks:
      - local
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      # Listeners
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9097,CONTROLLER://:9093, EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-0:9097, EXTERNAL://localhost:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2
  kafka-1:
    image: docker.io/bitnami/kafka:3.9
    ports:
      - "9098:9098"
      - "9096:9096"
    networks:
      - local
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      # Listeners
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9098, CONTROLLER://:9093, EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9098, EXTERNAL://localhost:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT, EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2
  raw_data0:
    build:
      context: .
      dockerfile: Dockerfile.raw_data
      args:
        MY_ARG: "./data/train1.csv"
    ports:
      - "8888:8888"
    networks:
      - local
    depends_on:
      - kafka-0
  raw_data1:
    build:
      context: .
      dockerfile: Dockerfile.raw_data
      args:
        MY_ARG: "./data/train2.csv"
    ports:
      - "8088:8088"
    networks:
      - local
    depends_on:
      - kafka-0

  preprocessing_data:
    build:
      context: .
      dockerfile: Dockerfile.preprocessing_data
    ports:
      - "8080:8080"
    networks:
      - local
    depends_on:
      - kafka-0
      - kafka-1
      - raw_data0
      - raw_data1
  modelml:
    build:
      context: .
      dockerfile: Dockerfile.modelML
    ports:
      - "8081:8081"
    networks:
      - local
    depends_on:
      - kafka-0
      - kafka-1
      - raw_data0
      - raw_data1
      - preprocessing_data

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    ports:
      - "8501:8501"
    networks:
      - local
    depends_on:
      - kafka-0
      - kafka-1
      - raw_data0
      - raw_data1
      - preprocessing_data
      - modelml

networks:
  local:
    driver: bridge
